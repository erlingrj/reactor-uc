/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include "nanopb/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Tag {
    int64_t time;
    uint32_t microstep;
} Tag;

typedef struct _PortMessage {
    Tag tag;
    int32_t connection_number; /* FIXME: I think we can safely reduce to 16 or even 8 bit. */
    char message[833];
} PortMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Tag_init_default                         {0, 0}
#define PortMessage_init_default                 {Tag_init_default, 0, ""}
#define Tag_init_zero                            {0, 0}
#define PortMessage_init_zero                    {Tag_init_zero, 0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define Tag_time_tag                             1
#define Tag_microstep_tag                        2
#define PortMessage_tag_tag                      1
#define PortMessage_connection_number_tag        2
#define PortMessage_message_tag                  3

/* Struct field encoding specification for nanopb */
#define Tag_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT64,    time,              1) \
X(a, STATIC,   REQUIRED, UINT32,   microstep,         2)
#define Tag_CALLBACK NULL
#define Tag_DEFAULT NULL

#define PortMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, MESSAGE,  tag,               1) \
X(a, STATIC,   REQUIRED, INT32,    connection_number,   2) \
X(a, STATIC,   REQUIRED, STRING,   message,           3)
#define PortMessage_CALLBACK NULL
#define PortMessage_DEFAULT NULL
#define PortMessage_tag_MSGTYPE Tag

extern const pb_msgdesc_t Tag_msg;
extern const pb_msgdesc_t PortMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Tag_fields &Tag_msg
#define PortMessage_fields &PortMessage_msg

/* Maximum encoded size of messages (where known) */
#define MESSAGE_PB_H_MAX_SIZE                    PortMessage_size
#define PortMessage_size                         865
#define Tag_size                                 17

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
